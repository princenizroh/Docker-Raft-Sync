version: '3.8'

services:
  # Redis for state management (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - distributed-net

  # Node 1
  node1:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    container_name: dist-node-1
    environment:
      - NODE_ID=node-1
      - NODE_HOST=0.0.0.0
      - NODE_PORT=5000
      - NODE_CLUSTER_PORT=5001
      - CLUSTER_NODES=node-1:dist-node-1:5000,node-2:dist-node-2:5000,node-3:dist-node-3:5000
      - REDIS_HOST=redis
      - LOG_LEVEL=DEBUG
      - ENABLE_HTTP_API=true
      - API_HOST=0.0.0.0
      - API_PORT=6000
    ports:
      - "6000:6000"  # HTTP API port on container matches exposed host port
    volumes:
      - node1_data:/app/data
    networks:
      - distributed-net
    depends_on:
      - redis
    restart: unless-stopped

  # Node 2
  node2:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    container_name: dist-node-2
    environment:
      - NODE_ID=node-2
      - NODE_HOST=0.0.0.0
      - NODE_PORT=5000
      - NODE_CLUSTER_PORT=5001
      - CLUSTER_NODES=node-1:dist-node-1:5000,node-2:dist-node-2:5000,node-3:dist-node-3:5000
      - REDIS_HOST=redis
      - LOG_LEVEL=DEBUG
      - ENABLE_HTTP_API=true
      - API_HOST=0.0.0.0
      - API_PORT=6010
    ports:
      - "6010:6010"  # HTTP API port on container matches exposed host port
    volumes:
      - node2_data:/app/data
    networks:
      - distributed-net
    depends_on:
      - redis
    restart: unless-stopped

  # Node 3
  node3:
    build:
      context: ..
      dockerfile: docker/Dockerfile.node
    container_name: dist-node-3
    environment:
      - NODE_ID=node-3
      - NODE_HOST=0.0.0.0
      - NODE_PORT=5000
      - NODE_CLUSTER_PORT=5001
      - CLUSTER_NODES=node-1:dist-node-1:5000,node-2:dist-node-2:5000,node-3:dist-node-3:5000
      - REDIS_HOST=redis
      - LOG_LEVEL=DEBUG
      - ENABLE_HTTP_API=true
      - API_HOST=0.0.0.0
      - API_PORT=6020
    ports:
      - "6020:6020"  # HTTP API port on container matches exposed host port
    volumes:
      - node3_data:/app/data
    networks:
      - distributed-net
    depends_on:
      - redis
    restart: unless-stopped

networks:
  distributed-net:
    driver: bridge

volumes:
  redis_data:
  node1_data:
  node2_data:
  node3_data:
